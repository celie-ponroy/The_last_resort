{
  "version": 3,
  "sources": ["js/Quest.js", "js/Arborescence.js", "js/Commands.js", "js/TheLastResort.js", "js/main.js"],
  "sourcesContent": ["'use strict'\n\n\n\nexport class Quest {\n\n    constructor(name = \"Quest\", commandsParam = []) {\n        this.name = name;\n        this.finished = false;\n        this.executed = [];\n        for (let i = 0; i < commandsParam.length; i++) {\n            this.executed[i] = false; // at first nothing is executed\n        }\n        this.commands = commandsParam;\n        \n    }\n\n    getFinished() {\n        return this.finished;\n    }\n\n    getCurrent() {\n        let i;\n        for (i = 0; i < this.commands.length; i++) {\n            if (this.executed[i] == false) {\n                return i;\n            }\n        }\n        return i;//the last by default\n    }\n\n    updateStatus() {\n        for (let i = 0; i < this.commands.length; i++) {\n            if (this.executed[i] == false) {\n                this.finished = false;\n                return;\n            }\n        }\n        this.finished = true;\n    }\n\n    checkVar(string) {\n        let equal = this.compareCommands(string)\n        if (equal) {\n            this.executed[this.getCurrent()] = true;\n            this.updateStatus();\n        }\n\n        return equal;\n    }\n\n    checkScript(command) {\n        let equal = this.compareCommands(command);\n        if (equal) {\n            this.executed[this.getCurrent()] = true;\n            this.updateStatus();\n        }\n\n        return equal;\n    }\n\n    compareCommands(string) {\n        let string1 = string.replace(/\\s+/g, ' ').trim();\n        let cmdCur = this.commands[this.getCurrent()];\n        let string2 = cmdCur.replace(/\\s+/g, ' ').trim();\n\n        return string1 === string2;\n    }\n\n    checkPathToConf(path) {\n        let equal = this.compareCommands(command);\n        if (equal) {\n            this.executed[this.getCurrent()] = true;\n            this.updateStatus();\n        }\n\n        return equal;\n    }\n    compareContentFiles(str1, str2) {\n        const normalizeString = (str) => {\n            if (typeof str !== 'string') return '';\n            return str\n                .trim()                                  // Supprime les espaces en d\u00E9but et en fin\n                .toLowerCase()                           // Ignore la casse\n                .replace(/\\s+/g, ' ')                    // Remplace les espaces multiples (y compris tabulations) par un seul espace\n                .replace(/[\\r\\n]+/g, ' ');               // Remplace les retours \u00E0 la ligne par un espace\n        };\n        return normalizeString(str1) === normalizeString(str2);\n    }\n    \n    \n    checkEdit(file){\n        \n        let command = this.commands[this.getCurrent()];\n        let res = false;\n        if(command.includes(\".\")){\n            let compareTo\n            switch(file.file_name){\n                case 'test.txt':\n                    compareTo = test;\n                    break;\n                case 'test2.txt':    \n                    compareTo = test2;\n                    break;\n                case 'navigation_config.json':\n                    compareTo = configFile;\n                    break;\n                case 'temperature_readings.json':\n                    compareTo = temperatureFile;\n                    break;\n\n            }\n            res = this.compareContentFiles(compareTo,file.file_content);\n\n\n\n            const normalizeString = (str) => {\n                if (typeof str !== 'string') return '';\n                return str\n                    .trim()                                  // Supprime les espaces en d\u00E9but et en fin\n                    .toLowerCase()                           // Ignore la casse\n                    .replace(/\\s+/g, ' ')                    // Remplace les espaces multiples (y compris tabulations) par un seul espace\n                    .replace(/[\\r\\n]+/g, ' ');               // Remplace les retours \u00E0 la ligne par un espace\n            };\n\n            if(res){\n                this.executed[this.getCurrent()] = true;\n                this.updateStatus();\n            }  \n        }\n        return res;\n        \n    }\n    checkCD(string){\n        let equal = this.compareCommands(string)\n        if (equal) {\n            this.executed[this.getCurrent()] = true;\n            this.updateStatus();\n        }\n        return equal;\n    }\n\n}\nconst test = `udp        tpi_clts      v     inet     udp     -       -\n    tcp        tpi_cots_ord  v     inet     tcp     -       -\n    udp6       tpi_clts      v     inet6    udp     -       -\n    tcp6       tpi_cots_ord  v     inet6    tcp     -       -\n    rawip      tpi_raw       -     inet      -      -       -\n    local      tpi_cots_ord  V     loopback  -      -       -\n    unix       tpi_cots_ord  -     loopback  -      -       -`\n\nconst test2 = `TO DO LIST:\n- by some pasta\n- finish the code`;\n\nconst configFile = `{\n    \"navigation_system\": \"autonomous\",\n    \"waypoint_threshold\": 0.5,\n    \"max_speed\": 3.5,\n    \"obstacle_detection\": true\n}`;\n\nlet temperatureFile; //'temperature_readings.json');\ntemperatureFile =`{\n    \"readings\": [\n        {\"timestamp\": \"2024-10-20T12:00:00Z\", \"temperature\": +50},\n        {\"timestamp\": \"2024-10-20T12:10:00Z\", \"temperature\": +49.5},\n        {\"timestamp\": \"2024-10-20T12:20:00Z\", \"temperature\": +49.0}\n    ]\n}`\n", "'use strict';\n\n\nexport class Directory {\n\n    constructor(dir_name, dir_parent) {\n        this.dir_name = dir_name;\n        this.dir_parent = dir_parent;\n        this.dir_array = [];\n    }\n\n    addToDirectory(child) {\n        this.dir_array.push(child);\n    }\n\n    deleteFromDirectory(child) {\n\n        if (child.includes('.')) {\n            // On suppose que c'est un fichier si \u00E7a contient un point (.)\n            let file = this.getFileByName(child);\n\n            if (file !== null) {\n                // Trouver l'index du fichier et le supprimer\n                const index = this.dir_array.indexOf(file);\n                if (index !== -1) {\n                    this.dir_array.splice(index, 1); // Supprime le fichier\n                    console.log(`${child} a \u00E9t\u00E9 supprim\u00E9 du r\u00E9pertoire.`);\n                }\n            } else {\n                console.log(`${child} n'existe pas dans ce r\u00E9pertoire.`);\n            }\n\n        } else {\n            // On suppose que c'est un r\u00E9pertoire si \u00E7a ne contient pas de point\n            let directory = this.getDirectoryByName(child);\n\n            if (directory !== null) {\n                // Trouver l'index du r\u00E9pertoire et le supprimer\n                const index = this.dir_array.indexOf(directory);\n                if (index !== -1) {\n                    this.dir_array.splice(index, 1); // Supprime le r\u00E9pertoire\n                    console.log(`${child} a \u00E9t\u00E9 supprim\u00E9 du r\u00E9pertoire.`);\n                }\n            } else {\n                console.log(`Le r\u00E9pertoire ${child} n'existe pas dans ce r\u00E9pertoire.`);\n            }\n        }\n    }\n\n    getDirectoryByName(name_dir) {\n\n        let retour = null;\n        for (let i = 0; i < this.dir_array.length; i++) {\n            if (this.dir_array[i] instanceof Directory && this.dir_array[i].dir_name == name_dir) {\n                retour = this.dir_array[i];\n            }\n        }\n\n        return retour;\n    }\n\n    getFileByName(name_file) {\n\n        let retour = null;\n        for (let i = 0; i < this.dir_array.length; i++) {\n            if (this.dir_array[i] instanceof File && this.dir_array[i].file_name == name_file) {\n                retour = this.dir_array[i];\n            }\n        }\n\n        return retour;\n    }\n\n\n    toString() {\n        let result = `${this.dir_name}`; // Affiche le nom du r\u00E9pertoire courant avec un saut de ligne\n\n        // Parcourir uniquement les \u00E9l\u00E9ments du r\u00E9pertoire courant (sans entrer dans les sous-r\u00E9pertoires)\n        for (let item of this.dir_array) {\n            if (item instanceof Directory) {\n                result += `  ${item.dir_name}\\n`; // Affiche le nom du sous-r\u00E9pertoire\n            }\n        }\n\n        return result;\n    }\n\n}\n\nexport class File {\n\n    constructor(file_name) {\n        this.file_name = file_name;\n        this.file_content = \"\";\n    }\n\n    editFile(content) {\n\n        this.file_content = content;\n    }\n\n    toString(level = 0) {\n        let indent = '  '.repeat(level); // Indentation pour la hi\u00E9rarchie\n        return `${indent} ${this.file_name}`;\n    }\n\n}\n\n\n\n\n//arborescence statique\n// Arborescence dynamique pour un robot dans l'espace\nexport const main_directory = new Directory('SpaceRobot', null);\n\n// R\u00E9pertoires principaux\nmain_directory.addToDirectory(new Directory('Navigation', main_directory));\nmain_directory.addToDirectory(new Directory('Communication', main_directory));\nmain_directory.addToDirectory(new Directory('Data', main_directory));\nmain_directory.addToDirectory(new Directory('Maintenance', main_directory));\nmain_directory.addToDirectory(new Directory('Science', main_directory));\n\n// Sous-r\u00E9pertoires dans 'Navigation'\nlet pathfinding_directory = new Directory('Pathfinding', main_directory.getDirectoryByName('Navigation'));\nmain_directory.getDirectoryByName('Navigation').addToDirectory(pathfinding_directory);\npathfinding_directory.addToDirectory(new File('astar_algorithm.py'));\npathfinding_directory.addToDirectory(new File('waypoint_coordinates.csv'));\n\n// Sous-r\u00E9pertoires dans 'Communication'\nlet telemetry_directory = new Directory('Telemetry', main_directory.getDirectoryByName('Communication'));\nmain_directory.getDirectoryByName('Communication').addToDirectory(telemetry_directory);\ntelemetry_directory.addToDirectory(new File('signal_logs.txt'));\ntelemetry_directory.addToDirectory(new File('transmission_report.csv'));\n\n// Sous-r\u00E9pertoires dans 'Data'\nlet sensor_data_directory = new Directory('Sensor', main_directory.getDirectoryByName('Data'));\nmain_directory.getDirectoryByName('Data').addToDirectory(sensor_data_directory);\nsensor_data_directory.addToDirectory(new File('temperature_readings.json'));\nsensor_data_directory.addToDirectory(new File('pressure_readings.json'));\n\n// Sous-r\u00E9pertoires dans 'Maintenance'\nlet repair_directory = new Directory('Repair', main_directory.getDirectoryByName('Maintenance'));\nmain_directory.getDirectoryByName('Maintenance').addToDirectory(repair_directory);\nrepair_directory.addToDirectory(new File('tool_inventory.txt'));\nrepair_directory.addToDirectory(new File('repair_manual.pdf'));\n\n// Sous-r\u00E9pertoires dans 'Science'\nlet experiments_directory = new Directory('Experiments', main_directory.getDirectoryByName('Science'));\nmain_directory.getDirectoryByName('Science').addToDirectory(experiments_directory);\nexperiments_directory.addToDirectory(new File('gravity_test_results.txt'));\nexperiments_directory.addToDirectory(new File('sample_analysis.csv'));\n\n// Exemple d'\u00E9dition d'un fichier dans 'Navigation'\nlet configFile = new File('navigation_config.json');\nconfigFile.editFile(`{\n    \"navigation_system\": \"autonomous\",\n    \"waypoint_threshold\": 0.5,\n    \"max_speed\": 2.5,\n    \"obstacle_detection\": true\n}`);\n\n\nlet orientation_log = new File('orientation.log');\norientation_log.editFile(`<20/10/2024> - D\u00E9but de l'analyse de l'ast\u00E9ro\u00EFde 234 dans la ceinture principale.\n\u00C9tat du syst\u00E8me : OK\n\n<20/10/2024 14:00 UTC> - Orientation initiale r\u00E9gl\u00E9e \u00E0 45\u00B0N, 30\u00B0E.\nDonn\u00E9es : D\u00E9rive due \u00E0 l'attraction gravitationnelle locale d\u00E9tect\u00E9e.\n\n<20/10/2024 14:15 UTC> - R\u00E9ajustement \u00E0 50\u00B0N, 25\u00B0E.\nObservation : Stabilisation r\u00E9ussie, temp\u00E9rature de surface enregistr\u00E9e.\n\n<20/10/2024 14:20 UTC> - Scan LIDAR actif.\n\u00C9tat du syst\u00E8me : OK\nOrientation : 55\u00B0N, 20\u00B0E. Structures g\u00E9ologiques identifi\u00E9es.\n\n<20/10/2024 14:25 UTC> - Donn\u00E9es collect\u00E9es : \u00E9l\u00E9vation max de 15 m\u00E8tres, composition silicate/m\u00E9tal.\nAjustement : 60\u00B0N, 15\u00B0E pour images haute r\u00E9solution.\n\n<20/10/2024 14:30 UTC> - Analyse termin\u00E9e, donn\u00E9es envoy\u00E9es \u00E0 la base.\nStatut : En attente de nouvelles instructions.\n\n<20/10/2024 18:24 UTC> - Collision avec la Terre Iminent\n\u00C9tat du syst\u00E8me : <!> PROBLEME <!>`);\n\nmain_directory.getDirectoryByName('Navigation').addToDirectory(orientation_log);\n\nmain_directory.getDirectoryByName('Navigation').addToDirectory(configFile);\n\n// Exemple d'\u00E9dition de fichier dans 'Data/Sensor Data'\nlet temperatureFile = sensor_data_directory.getFileByName('temperature_readings.json');\ntemperatureFile.editFile(`{\n    \"readings\": [\n        {\"timestamp\": \"2024-10-20T12:00:00Z\", \"temperature\": -50},\n        {\"timestamp\": \"2024-10-20T12:10:00Z\", \"temperature\": -49.5},\n        {\"timestamp\": \"2024-10-20T12:20:00Z\", \"temperature\": -49.0}\n    ]\n}`);\n\n// Ajout d'un autre fichier dans 'Data/Sensor Data'\nsensor_data_directory.addToDirectory(new File('humidity_readings.json'));\n\n// Affichage de l'arborescence\nconsole.log(main_directory.toString());\n\n", "'use strict'\n\nimport { File, Directory } from \"./Arborescence.js\";\n\n\nclass Command {\n    constructor() {\n    }\n    execute() { }\n}\n\nexport class Script extends Command {\n    constructor() { super() }\n    execute(string) {\n        // changer avec une liste de script pr\u00E9 d\u00E9finie\n        let res = \"\";\n        switch (string.split(\" \")[1]) {\n            case \"altf4.sh\":\n                res = \"Cr\u00E9dits:\\n\" +\n                    \"Amaglio Matias: son \\n\" +\n                    \"Arcelin Nino: htlm/scss et devellopement backend\\n\" +\n                    \"Ponroy C\u00E9lie: devellopement backend\" +\n                    \"--------------------------------------------------\"\n                break;\n\n            case \"help.sh\":\n                res = \"HAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\n                break;\n            case \"nino.sh\":\n                res = \"nino to the rescue\";\n                break;\n            case \"matias.sh\":\n                res = \"you bought a cookie to matias he will help you\"\n                break;\n            case \"celie.sh\":\n                res = \"its all good celie helped you :)\";\n            case \"valentin.sh\":\n                res = \"mini panier de basket :0\";\n                break;\n            case \"celien.sh\":\n                res = \"LA PUISSANCE DU NOMBRILAX\";\n                break;\n            case \"shieldDiagnostic.sh\":\n                res = \"Shield power too low, 'shield_strength' must be at 100\";\n                break\n            case \"repairPropellers.sh\":\n            case \"fuelBalance.sh\":\n            case \"calibrateGravity.sh\":\n            case \"syncCommSystem.sh\":\n            case \"repairBattery.sh\":\n            case \"repairTankLeaks.sh\":\n            case \"repairElectricalSystems.sh\":\n                res = \"repairing ...\\n\" +\n                    \"repaired !\";\n                break;\n        }\n        return res;\n    }\n}\n\n\n//TODO\nexport class Edit extends Command {\n    constructor() {\n        super();\n    }\n\n    execute(file_name, current_dir) {\n        const list = document.getElementById('scrollable-list');\n        list.style.display = \"none\";\n\n        // R\u00E9cup\u00E9rer le fichier en utilisant le nom du fichier\n        let file = current_dir.getFileByName(file_name);\n\n        // V\u00E9rifiez si le fichier a \u00E9t\u00E9 trouv\u00E9 et a du contenu\n        if (file && file.file_content !== undefined) {\n            // Mettre \u00E0 jour le texte de l'\u00E9tiquette\n            const label = document.querySelector('label[for=\"user-input\"]');\n            label.textContent = 'Edition Mode :';\n\n            // Afficher le textarea et masquer l'input\n            const input = document.getElementById('user-input');\n            const textarea = document.getElementById('editable-textarea');\n            const savebutton = document.getElementById('save-button');\n\n\n            input.style.display = 'none'; // Masquer l'input\n            textarea.style.display = 'block'; // Afficher le textarea\n            savebutton.style.display = 'block'; // Afficher le textarea\n\n\n            // D\u00E9finir la valeur du textarea avec le contenu du fichier\n            textarea.value = file.file_content; // D\u00E9finir la valeur du textarea avec le contenu du fichier\n\n            // V\u00E9rifiez que la valeur est bien d\u00E9finie\n            return file;\n        } else {\n            console.error(\"Fichier non trouv\u00E9 ou vide.\");\n        }\n    }\n}\n\n\nexport class Create extends Command {\n    constructor() { super() }\n    execute(argument, current_dir) {\n        if (argument.includes('.')) {\n            console.log(\"L'argument contient un point.\");\n            current_dir.addToDirectory(new File(argument));\n        } else {\n            console.log(\"L'argument ne contient pas de point.\");\n            current_dir.addToDirectory(new Directory(argument, current_dir));\n\n        }\n\n    }\n}\n\n\nexport class Delete extends Command {\n    constructor() { super() }\n    execute(argument, current_dir) {\n        current_dir.deleteFromDirectory(argument);\n\n    }\n}\n\n\n\nexport class Cd extends Command {\n    constructor() { super() }\n    execute(argument, current_dir) {\n        switch (argument) {\n            case '..':\n                return current_dir.dir_parent;\n\n            default:\n                return current_dir.getDirectoryByName(argument);\n\n        }\n\n    }\n}\n\nexport class Liste extends Command {\n    constructor() { super() }\n\n    execute(dir_array) {\n        let retour = \"\";\n\n        for (let i = 0; i < dir_array.length; i++) {\n\n            if (dir_array[i] instanceof Directory)\n                retour += dir_array[i].dir_name + \" | \";\n            else\n                retour += dir_array[i].file_name + \" | \";\n        }\n        return retour;\n    }\n}\n", "'use strict'\nimport { Script, Edit, Liste, Cd, Create, Delete } from \"./Commands.js\";\n\nimport { main_directory } from \"./Arborescence.js\";\n\nlet numero_quest = 1;\n\nexport class TheLastResort {\n    constructor() {\n        this.current_dir = main_directory;\n        this.current_file = '';\n        this.current = 0;\n        this.quests = [];\n        this.now = 0;\n        this.initial = 0;\n        this.countDownDate = 0;\n        this.timeleft = 0;\n        this.initTimer(15);\n\n    }\n\n    addQuest(quest) {\n        this.updateCurrent();\n        this.quests.push(quest);\n        this.initNameQuestsUI(quest);\n    }\n    executeCmd(string = \"\") {\n        // split par espace\n        //ex overlay = true => [\"overlay\",\"=\",\"true\"]\n        let editabletextarea = document.getElementById('editable-textarea');\n\n        if (editabletextarea.style.display !== 'block') {\n            this.addcommandToUI(string);\n            let command = string.split(' ');\n            switch (command[0]) {\n                case \"edit\":\n                    //classe nano et execution\n                    if (this.current_dir.getFileByName(command[1])) {\n                        this.current_file = new Edit().execute(command[1], this.current_dir);//rajouter fichiers\n                    } else\n                        this.addResultToUI(\"Something went wrong :(\");\n\n                    break;\n                case \"modify\":\n                    //verifier que le string est bien\n                    //checkvar\n                    this.quests[this.current].checkVar(string);\n                    this.clearPrompt();\n\n                    break;\n                case 'create':\n                    new Create().execute(command[1], this.current_dir);\n                    this.clearPrompt();\n\n                    break;\n\n                case 'delete':\n                    new Delete().execute(command[1], this.current_dir);\n                    this.clearPrompt();\n\n                    break;\n\n                case \"ls\":\n                    this.addResultToUI(new Liste().execute(this.current_dir.dir_array));\n                    this.clearPrompt();\n                    break;\n\n                case \"cd\":\n                    //cd\n                    let cd = new Cd();\n                    let new_current_dir = cd.execute(command[1], this.current_dir);\n\n                    console.log(new_current_dir);\n                    if (new_current_dir == null)\n                        this.addResultToUI(\"Something went wrong :(\");\n\n                    else {\n                        this.current_dir = new_current_dir;\n                        this.quests[this.current].checkCD(string);\n                    }\n                    this.clearPrompt();\n\n                    break;\n\n\n                case \"run\":\n                    //script\n                    let script = new Script();\n                    let res = script.execute(string);\n                    this.quests[this.current].checkScript(string);\n                    this.addResultToUI(res);\n                    this.clearPrompt();\n\n                    break;\n                case \"clear\":\n                    this.replaceUI();\n                    break;\n            }\n        } else {\n            this.current_file.editFile(editabletextarea.value);\n\n            editabletextarea.value = \"\";\n            editabletextarea.style.display = \"none\";\n            document.getElementById('user-input').style.display = \"\";\n            document.getElementById('user-input').value = \"\";\n            document.getElementById('save-button').style.display = \"none\";\n            const label = document.querySelector('label[for=\"user-input\"]');\n            label.textContent = '';\n            document.getElementById('scrollable-list').style.display = \"block\";\n\n            this.quests[this.current].checkEdit(this.current_file);\n\n            this.addResultToUI(\"File edited :)\");\n\n        }\n        this.updateCurrent();\n        this.updateQuestUI();\n        this.updateStatus();\n\n\n\n    }\n\n    updateCurrent() {\n        let i = 0;\n        for (i = 0; i < this.quests.length; i++) {\n            if (this.quests[i].getFinished() == false) {\n                break;\n            }\n        }\n        this.current = i;\n    }\n\n    updateStatus() {\n        for (let i = 0; i < this.quests.length; i++) {\n            if (this.quests[i].getFinished() == false) {\n                return;\n            }\n        }\n        this.stopTimer();\n        this.finish(true);\n\n    }\n\n    addcommandToUI(command) {\n        const ulElement = document.querySelector('.screen ul');\n\n        // Ajouter un nouvel \u00E9l\u00E9ment \u00E0 la fin de la liste\n        const newListItem = document.createElement('li');\n        newListItem.textContent = command;\n        ulElement.appendChild(newListItem);\n    }\n\n    addResultToUI(command) {\n        const ulElement = document.querySelector('.screen ul');\n\n        const newItem = document.createElement('p');\n        newItem.textContent = command;\n        ulElement.appendChild(newItem);\n    }\n    replaceUI(string = \"\") {\n        const ulElement = document.querySelector('.screen ul');\n        const finishText = document.createElement('p');\n        finishText.textContent = string;\n        ulElement.replaceChildren(finishText);\n    }\n    nameQuestsUI() {\n\n        let questElements = document.getElementById('list-quest');\n        console.log(\"questElements\" + questElements);\n        let i = 0;\n        this.quests.forEach(quest => {\n\n            let li = document.createElement('li');\n            console.log(\"li ; \" + li);\n            li.innerHTML = `\n                <div class=\"checkbox-wrapper-19\">\n                    <input type=\"checkbox\" id=\"${i + 1}\" />\n                    <label for=\"${i + 1}\" class=\"check-box\"></label>\n                </div>\n                ${quest.name}`;\n            questElements.appendChild(li);\n            i++;\n        });\n    }\n\n    initNameQuestsUI(quest) {\n\n\n        let i = this.quests.length;\n        let questElements = document.getElementById('list-quest');\n\n        let li = document.createElement('li');\n        console.log(\"li ; \" + li);\n        li.innerHTML = `\n            <div class=\"checkbox-wrapper-19\">\n                <input type=\"checkbox\" id=\"${i}\" disabled />\n                <label for=\"${i}\" class=\"check-box\"></label>\n            </div>\n            ${numero_quest + ' - ' + quest.name}`;\n        questElements.appendChild(li);\n        numero_quest++;\n    }\n\n    updateQuestUI() {\n        for (let index = 0; index < this.quests.length; index++) {\n            let checkbox = document.getElementById(index + 1);\n            checkbox.checked = this.quests[index].getFinished();\n        }\n    }\n\n    finish(win) {\n        if (!win) {\n            this.replaceUI('Oh no the robot was exploded :(  the atmosphere will still be dirty');\n        }\n        if (win)\n            this.replaceUI('Well done you saved the earth!!');\n        this.replaceUI('Your time -->' + this.timeleft);\n\n    }\n\n    clearPrompt() {\n        const form = document.querySelector('#user-form');\n        form.reset();\n    }\n\n\n    // Initialize Timer\n    initTimer(timeinitial) {\n        this.timeinitial = timeinitial;\n        this.now = new Date().getTime();\n        this.countDownDate = this.now + this.timeinitial * 60000;\n\n        // Start the timer and store the interval ID\n        this.timerInterval = setInterval(() => this.updateTimer(), 1000);\n    }\n\n    // Update Timer\n    updateTimer() {\n        this.now = new Date().getTime();\n        this.timeleft = this.countDownDate - this.now;\n\n        let minutes = Math.floor((this.timeleft % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((this.timeleft % (1000 * 60)) / 1000);\n\n        let time = `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`;\n        document.getElementById(\"timer-value\").innerHTML = time;\n\n        // Check if the timer has finished\n        if (this.timeleft <= 0) {\n            document.getElementById(\"timer-value\").innerHTML = \"00:00\";\n            this.stopTimer();  // Stop the timer when it reaches 0\n            this.finish(false);\n        }\n    }\n\n    // Stop Timer\n    stopTimer() {\n        clearInterval(this.timerInterval);  // Clear the interval to stop the timer\n    }\n\n}", "'use strict'\nimport { Quest } from \"./Quest.js\";\nimport { TheLastResort } from \"./TheLastResort.js\";\nimport { File } from \"./Arborescence.js\";\n\nlet theLastResort = new TheLastResort();\n\nconst quests = [\n    new Quest(\"Corriger le syst\u00E8me \u00E9lectrique du vaisseau\", [\"modify electricity_enable = true\", \"run repairElectricalSystems.sh\"]),\n    new Quest(\"Contr\u00F4ler le syst\u00E8me d'orientation du vaisseau\", [\"modify orientation_up = true\", \"run celie.sh\"]),\n    new Quest(\"Configuration des propulseurs\", [\"run repairPropellers.sh\", \"edit navigation_config.json\"]),\n    new Quest(\"Ajustement temp\u00E9rature syst\u00E8me\", [\"edit temperature_readings.json\"]),\n    new Quest(\"R\u00E9gler le niveau de carburant\", [\"run fuelBalance.sh\"]),\n    new Quest(\"V\u00E9rifier l'int\u00E9grit\u00E9 du bouclier\", [\"run shieldDiagnostic.sh\", \"modify shield_strength = 100\"]),\n    new Quest(\"Calibrer les senseurs de gravit\u00E9\", [\"run calibrateGravity.sh\"]),\n    new Quest(\"Synchroniser les syst\u00E8mes de communication\", [\"run syncCommSystem.sh\"])\n];\n\n// Fonction pour choisir 4 qu\u00EAtes al\u00E9atoires sans r\u00E9p\u00E9tition\nfunction getRandomQuests(questArray, numQuests) {\n    let selectedQuests = [];\n    while (selectedQuests.length < numQuests) {\n        let randomQuest = questArray[Math.floor(Math.random() * questArray.length)];\n        if (!selectedQuests.includes(randomQuest)) {\n            selectedQuests.push(randomQuest);\n        }\n    }\n    return selectedQuests;\n}\n\n// S\u00E9lection et ajout des qu\u00EAtes\nconst randomQuests = getRandomQuests(quests, 4);\nrandomQuests.forEach(quest => theLastResort.addQuest(quest));\n\n\nfunction scrollToBottom() {\n    const list = document.getElementById('scrollable-list');\n    list.scrollTop = list.scrollHeight; // D\u00E9finit la position de d\u00E9filement au bas du conteneur\n}\n\ntheLastResort.updateQuestUI()\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const form = document.querySelector('#user-form');\n    const userInput = document.querySelector('#user-input');\n\n\n    //cmd\n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        const inputValue = userInput.value;\n        theLastResort.executeCmd(inputValue);\n\n        scrollToBottom();\n\n    });\n\n    //save file\n});\n"],
  "mappings": "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",
  "names": ["Quest", "name", "commandsParam", "i", "string", "equal", "command", "string1", "string2", "path", "str1", "str2", "normalizeString", "str", "file", "res", "compareTo", "test", "test2", "configFile", "temperatureFile", "Directory", "_Directory", "dir_name", "dir_parent", "child", "file", "index", "directory", "name_dir", "retour", "i", "name_file", "File", "result", "item", "file_name", "content", "level", "main_directory", "pathfinding_directory", "telemetry_directory", "sensor_data_directory", "repair_directory", "experiments_directory", "configFile", "orientation_log", "temperatureFile", "Command", "Script", "string", "res", "Edit", "file_name", "current_dir", "list", "file", "label", "input", "textarea", "savebutton", "Create", "argument", "File", "Directory", "Delete", "Cd", "Liste", "dir_array", "retour", "i", "numero_quest", "TheLastResort", "main_directory", "quest", "string", "editabletextarea", "command", "Edit", "Create", "Delete", "Liste", "new_current_dir", "Cd", "res", "Script", "label", "i", "ulElement", "newListItem", "newItem", "finishText", "questElements", "li", "index", "checkbox", "win", "timeinitial", "minutes", "seconds", "time", "theLastResort", "TheLastResort", "quests", "Quest", "getRandomQuests", "questArray", "numQuests", "selectedQuests", "randomQuest", "randomQuests", "quest", "scrollToBottom", "list", "form", "userInput", "event", "inputValue"]
}
